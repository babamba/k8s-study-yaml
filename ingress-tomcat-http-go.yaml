apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: tomcat-http-go-ingress
spec:
  tls:
    - hosts:
        - tomcat.gasbugs.com
        - http-go.gasbugs.com
      secretName: tls-secret
  rules:
    - host: tomcat.gasbugs.com
      http:
        paths:
          - path: /
            backend:
              serviceName: tomcat
              servicePort: 80
    - host: http-go.gasbugs.com
      http:
        paths:
          - path: /
            backend:
              serviceName: tomcat
              servicePort: 80

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deploy-tomcat
  labels:
    app: tomcat
spec:
  replicas: 3
  selector:
    matchLabels:
      app: tomcat
  template:
    metadata:
      labels:
        app: tomcat
    spec:
      containers:
        - name: tomcat
          image: consol/tomcat-7.0
          ports:
            - containerPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: http-go
  labels:
    app: http-go
spec:
  replicas: 3
  selector:
    matchLabels:
      app: http-go
  template:
    metadata:
      labels:
        app: http-go
    spec:
      containers:
        - name: http-go
          image: orochi13/kube-http-go
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: http-go
spec:
  selector:
    app: http-go
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
      nodePort: 30001
  type: NodePort

---
apiVersion: v1
kind: Service
metadata:
  name: tomcat
spec:
  selector:
    app: tomcat
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
      nodePort: 30002
  type: NodePort
---
# kubectl delete secret tls-secret
# openssl genrsa -out tls.key 2048
# openssl req -new -x509 -key tls.key -out tls.cert -days 360 -subj /CN=tomcat.gasbugs.com
# kubectl create secret tls tls-secret --cert=tls.cert --key=tls.key
